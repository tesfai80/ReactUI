{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tesfa\\\\Desktop\\\\ReactUI\\\\my-app\\\\src\\\\components\\\\Employee\\\\Employee.tsx\";\nimport * as React from 'react';\nimport EmployeeService from '../services/EmployeeService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Employee extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: null,\n      isLoading: false\n    };\n  }\n\n  componentDidMount() {\n    console.log('inside mount');\n    this.setState({\n      isLoading: true\n    });\n    EmployeeService.getEmployeeList().then(response => response.json()).then(data => this.setState({\n      employees: data\n    }));\n  }\n\n  render() {\n    const {\n      employees,\n      isLoading\n    } = this.state;\n\n    if (isLoading) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading ...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 20\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/tesfa/Desktop/ReactUI/my-app/src/components/Employee/Employee.tsx"],"names":["React","EmployeeService","Employee","Component","constructor","props","state","data","isLoading","componentDidMount","console","log","setState","getEmployeeList","then","response","json","employees","render"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,OAAOC,eAAP,MAA4B,6BAA5B;;AACA,eAAe,MAAMC,QAAN,SAAuBF,KAAK,CAACG,SAA7B,CAAiD;AAC5DC,EAAAA,WAAW,CAACC,KAAD,EAAa;AACpB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,IADG;AAETC,MAAAA,SAAS,EAAE;AAFF,KAAb;AAIH;;AACDC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,SAAKC,QAAL,CAAc;AAAEJ,MAAAA,SAAS,EAAE;AAAb,KAAd;AACAP,IAAAA,eAAe,CAACY,eAAhB,GAAkCC,IAAlC,CAAuCC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAAnD,EACKF,IADL,CACUP,IAAI,IAAI,KAAKK,QAAL,CAAc;AAAEK,MAAAA,SAAS,EAAEV;AAAb,KAAd,CADlB;AAGH;;AACDW,EAAAA,MAAM,GAAG;AACL,UAAM;AAAED,MAAAA,SAAF;AAAaT,MAAAA;AAAb,QAA2B,KAAKF,KAAtC;;AACA,QAAIE,SAAJ,EAAe;AACX,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;;AACD,wBACI;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAWH;;AAhC2D","sourcesContent":["import * as React from 'react'\r\n\r\nimport EmployeeService from '../services/EmployeeService';\r\nexport default class Employee extends React.Component<any, any> {\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            data: null,\r\n            isLoading: false,\r\n        };\r\n    };\r\n    componentDidMount() {\r\n        console.log('inside mount')\r\n        this.setState({ isLoading: true });\r\n        EmployeeService.getEmployeeList().then(response => response.json())\r\n            .then(data => this.setState({ employees: data }));\r\n\r\n    }\r\n    render() {\r\n        const { employees, isLoading } = this.state;\r\n        if (isLoading) {\r\n            return <p>Loading ...</p>;\r\n        }\r\n        return (\r\n            <div>\r\n                <ul>\r\n                    {/* {employees.map(hit:any =>\r\n                        <li key={hit.objectID}>\r\n                            <a href={hit.url}>{hit.title}</a>\r\n                        </li>\r\n                    )} */}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}