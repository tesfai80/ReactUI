{"ast":null,"code":"import axios from \"axios\";\n\nclass EmployeeService {\n  constructor() {\n    this.APIUrl = 'http://localhost:8090/api/Employee';\n    this.auth_token = localStorage.getItem(\"access_token\");\n    this.header = {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${this.auth_token}`\n    };\n  }\n\n  async getEmployeeList() {\n    axios.get(this.APIUrl + '/GetEmployees', {\n      method: 'GET',\n      headers: this.header\n    }).then(res => {\n      return res;\n    }).catch(error => console.log(error));\n  }\n\n  async create(emp) {\n    let result = await fetch(this.APIUrl + '/AddEmployee', {\n      method: 'POST',\n      headers: this.header,\n      body: JSON.stringify(emp)\n    });\n    return result = await result.json();\n  }\n\n  async update(emp) {\n    let result = await fetch(this.APIUrl + '/UpdateEmployee', {\n      method: 'PUT',\n      headers: this.header,\n      body: JSON.stringify(emp)\n    });\n    return result = await result.json();\n  }\n\n  async delete(id) {\n    let result = await fetch(this.APIUrl + '/UpdateEmployee', {\n      method: 'DELETE',\n      headers: this.header,\n      body: JSON.stringify(id)\n    });\n    return result = await result.json();\n  }\n\n}\n\nexport default new EmployeeService();","map":{"version":3,"sources":["C:/Users/tesfa/Desktop/ReactUI/my-app/src/components/services/EmployeeService.tsx"],"names":["axios","EmployeeService","APIUrl","auth_token","localStorage","getItem","header","getEmployeeList","get","method","headers","then","res","catch","error","console","log","create","emp","result","fetch","body","JSON","stringify","json","update","delete","id"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAKA,MAAMC,eAAN,CAAsB;AAAA;AAAA,SAEXC,MAFW,GAEF,oCAFE;AAAA,SAGXC,UAHW,GAGEC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAHF;AAAA,SAIXC,MAJW,GAIF;AAChB,sBAAgB,kBADA;AAEhB,uBAAkB,UAAS,KAAKH,UAAW;AAF3B,KAJE;AAAA;;AAQC,QAAfI,eAAe,GAAG;AAEtBP,IAAAA,KAAK,CAACQ,GAAN,CAAU,KAAKN,MAAL,GAAc,eAAxB,EAAyC;AACvCO,MAAAA,MAAM,EAAE,KAD+B;AAEvCC,MAAAA,OAAO,EAAE,KAAKJ;AAFyB,KAAzC,EAIGK,IAJH,CAIQC,GAAG,IAAI;AACZ,aAAOA,GAAP;AACA,KANH,EAOGC,KAPH,CAOSC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAPlB;AASD;;AAEW,QAANG,MAAM,CAACC,GAAD,EAAqB;AAC/B,QAAIC,MAAM,GAAG,MAAMC,KAAK,CAAC,KAAKlB,MAAL,GAAc,cAAf,EAA+B;AACrDO,MAAAA,MAAM,EAAE,MAD6C;AAErDC,MAAAA,OAAO,EAAE,KAAKJ,MAFuC;AAGrDe,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,GAAf;AAH+C,KAA/B,CAAxB;AAKA,WAAOC,MAAM,GAAG,MAAMA,MAAM,CAACK,IAAP,EAAtB;AACD;;AACW,QAANC,MAAM,CAACP,GAAD,EAAqB;AAC/B,QAAIC,MAAM,GAAG,MAAMC,KAAK,CAAC,KAAKlB,MAAL,GAAc,iBAAf,EAAkC;AACxDO,MAAAA,MAAM,EAAE,KADgD;AAExDC,MAAAA,OAAO,EAAE,KAAKJ,MAF0C;AAGxDe,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,GAAf;AAHkD,KAAlC,CAAxB;AAKA,WAAOC,MAAM,GAAG,MAAMA,MAAM,CAACK,IAAP,EAAtB;AACD;;AACW,QAANE,MAAM,CAACC,EAAD,EAAU;AACpB,QAAIR,MAAM,GAAG,MAAMC,KAAK,CAAC,KAAKlB,MAAL,GAAc,iBAAf,EAAkC;AACxDO,MAAAA,MAAM,EAAE,QADgD;AAExDC,MAAAA,OAAO,EAAE,KAAKJ,MAF0C;AAGxDe,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeI,EAAf;AAHkD,KAAlC,CAAxB;AAKA,WAAOR,MAAM,GAAG,MAAMA,MAAM,CAACK,IAAP,EAAtB;AAED;;AA7CmB;;AAgDtB,eAAe,IAAIvB,eAAJ,EAAf","sourcesContent":["import axios from \"axios\";\r\nimport EmployeeModel from \"../Employee/EmployeeModel\";\r\n\r\n\r\n\r\nclass EmployeeService {\r\n\r\n  readonly APIUrl = 'http://localhost:8090/api/Employee';\r\n  readonly auth_token = localStorage.getItem(\"access_token\");\r\n  readonly header = {\r\n    'Content-Type': 'application/json',\r\n    'Authorization': `Bearer ${this.auth_token}`\r\n  }\r\n  async getEmployeeList() {\r\n   \r\n    axios.get(this.APIUrl + '/GetEmployees', {\r\n      method: 'GET',\r\n      headers: this.header\r\n    })\r\n      .then(res => {\r\n       return res;\r\n      })\r\n      .catch(error => console.log(error));\r\n     \r\n  }\r\n\r\n  async create(emp: EmployeeModel) {\r\n    let result = await fetch(this.APIUrl + '/AddEmployee', {\r\n      method: 'POST',\r\n      headers: this.header,\r\n      body: JSON.stringify(emp)\r\n    });\r\n    return result = await result.json();\r\n  }\r\n  async update(emp: EmployeeModel) {\r\n    let result = await fetch(this.APIUrl + '/UpdateEmployee', {\r\n      method: 'PUT',\r\n      headers: this.header,\r\n      body: JSON.stringify(emp)\r\n    });\r\n    return result = await result.json();\r\n  }\r\n  async delete(id: any) {\r\n    let result = await fetch(this.APIUrl + '/UpdateEmployee', {\r\n      method: 'DELETE',\r\n      headers: this.header,\r\n      body: JSON.stringify(id)\r\n    });\r\n    return result = await result.json();\r\n\r\n  }\r\n}\r\n\r\nexport default new EmployeeService()"]},"metadata":{},"sourceType":"module"}