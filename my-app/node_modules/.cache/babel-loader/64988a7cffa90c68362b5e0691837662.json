{"ast":null,"code":"class EmployeeService {\n  constructor() {\n    this.APIUrl = 'http://localhost:8090/api/Employee';\n    this.auth_token = localStorage.getItem(\"access_token\");\n    this.header = {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${this.auth_token}`\n    };\n  }\n\n  async getEmployeeList() {\n    alert(this.header);\n    let result = await fetch(this.APIUrl + '/GetEmployees', {\n      method: 'GET',\n      headers: this.header\n    });\n    console.log(result.json());\n    return result = await result.json();\n  }\n\n  async create(emp) {\n    let result = await fetch(this.APIUrl + '/AddEmployee', {\n      method: 'POST',\n      headers: this.header,\n      body: JSON.stringify(emp)\n    });\n    return result = await result.json();\n  }\n\n  async update(emp) {\n    let result = await fetch(this.APIUrl + '/UpdateEmployee', {\n      method: 'PUT',\n      headers: this.header,\n      body: JSON.stringify(emp)\n    });\n    return result = await result.json();\n  }\n\n  async delete(id) {\n    let result = await fetch(this.APIUrl + '/UpdateEmployee', {\n      method: 'DELETE',\n      headers: this.header,\n      body: JSON.stringify(id)\n    });\n    return result = await result.json();\n  }\n\n}\n\nexport default new EmployeeService();","map":{"version":3,"sources":["C:/Users/tesfa/Desktop/ReactUI/my-app/src/components/services/EmployeeService.tsx"],"names":["EmployeeService","APIUrl","auth_token","localStorage","getItem","header","getEmployeeList","alert","result","fetch","method","headers","console","log","json","create","emp","body","JSON","stringify","update","delete","id"],"mappings":"AAIA,MAAMA,eAAN,CAAqB;AAAA;AAAA,SAERC,MAFQ,GAED,oCAFC;AAAA,SAGRC,UAHQ,GAGGC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAHH;AAAA,SAIRC,MAJQ,GAID;AAChB,sBAAgB,kBADA;AAEhB,uBAAkB,UAAS,KAAKH,UAAW;AAF3B,KAJC;AAAA;;AAQI,QAAfI,eAAe,GAAE;AACtBC,IAAAA,KAAK,CAAC,KAAKF,MAAN,CAAL;AACD,QAAIG,MAAM,GAAG,MAAMC,KAAK,CAAC,KAAKR,MAAL,GAAc,eAAf,EAAgC;AACtDS,MAAAA,MAAM,EAAE,KAD8C;AAEtDC,MAAAA,OAAO,EAAC,KAAKN;AAFyC,KAAhC,CAAxB;AAIAO,IAAAA,OAAO,CAACC,GAAR,CAAYL,MAAM,CAACM,IAAP,EAAZ;AACD,WAAON,MAAM,GAAG,MAAMA,MAAM,CAACM,IAAP,EAAtB;AAEC;;AAEW,QAANC,MAAM,CAACC,GAAD,EAAoB;AAC3B,QAAIR,MAAM,GAAG,MAAMC,KAAK,CAAC,KAAKR,MAAL,GAAc,cAAf,EAA+B;AACnDS,MAAAA,MAAM,EAAE,MAD2C;AAEnDC,MAAAA,OAAO,EAAC,KAAKN,MAFsC;AAGnDY,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeH,GAAf;AAH6C,KAA/B,CAAxB;AAKC,WAAOR,MAAM,GAAG,MAAMA,MAAM,CAACM,IAAP,EAAtB;AACJ;;AACW,QAANM,MAAM,CAACJ,GAAD,EAAmB;AAC3B,QAAIR,MAAM,GAAG,MAAMC,KAAK,CAAC,KAAKR,MAAL,GAAc,iBAAf,EAAkC;AACtDS,MAAAA,MAAM,EAAE,KAD8C;AAEtDC,MAAAA,OAAO,EAAE,KAAKN,MAFwC;AAGtDY,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeH,GAAf;AAHgD,KAAlC,CAAxB;AAKC,WAAOR,MAAM,GAAG,MAAMA,MAAM,CAACM,IAAP,EAAtB;AACJ;;AACU,QAANO,MAAM,CAACC,EAAD,EAAQ;AACf,QAAId,MAAM,GAAG,MAAMC,KAAK,CAAC,KAAKR,MAAL,GAAc,iBAAf,EAAkC;AACtDS,MAAAA,MAAM,EAAE,QAD8C;AAEtDC,MAAAA,OAAO,EAAE,KAAKN,MAFwC;AAGtDY,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeG,EAAf;AAHgD,KAAlC,CAAxB;AAKC,WAAOd,MAAM,GAAG,MAAMA,MAAM,CAACM,IAAP,EAAtB;AAEJ;;AA3CgB;;AA8CrB,eAAe,IAAId,eAAJ,EAAf","sourcesContent":["import EmployeeModel from \"../Employee/EmployeeModel\";\r\n\r\n\r\n\r\nclass EmployeeService{\r\n\r\n    readonly APIUrl='http://localhost:8090/api/Employee';\r\n    readonly auth_token=localStorage.getItem(\"access_token\");\r\n    readonly header={\r\n    'Content-Type': 'application/json',\r\n    'Authorization': `Bearer ${this.auth_token}`\r\n   }\r\n   async  getEmployeeList(){ \r\n     alert(this.header);\r\n    let result = await fetch(this.APIUrl + '/GetEmployees', {\r\n      method: 'GET',\r\n      headers:this.header,\r\n    });\r\n    console.log(result.json());\r\n   return result = await result.json(); \r\n   \r\n   }\r\n\r\n   async create(emp: EmployeeModel){\r\n        let result = await fetch(this.APIUrl + '/AddEmployee', {\r\n            method: 'POST',\r\n            headers:this.header,\r\n            body: JSON.stringify(emp)\r\n          });\r\n         return result = await result.json(); \r\n    }\r\n    async update(emp:EmployeeModel){\r\n        let result = await fetch(this.APIUrl + '/UpdateEmployee', {\r\n            method: 'PUT',\r\n            headers: this.header,\r\n            body: JSON.stringify(emp)\r\n          });\r\n         return result = await result.json(); \r\n    }\r\n   async delete(id:any){\r\n        let result = await fetch(this.APIUrl + '/UpdateEmployee', {\r\n            method: 'DELETE',\r\n            headers: this.header,\r\n            body: JSON.stringify(id)\r\n          });\r\n         return result = await result.json(); \r\n\r\n    }\r\n} \r\n\r\nexport default new EmployeeService()"]},"metadata":{},"sourceType":"module"}