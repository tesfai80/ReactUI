{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tesfa\\\\Desktop\\\\ReactUI\\\\my-app\\\\src\\\\components\\\\Login\\\\Login.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './Login.css';\nimport authService from '../services/authService';\nimport { Button, Card, Form } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nasync function loginUser(user) {\n  console.log('inside login');\n  return authService.login(user);\n}\n\nexport default function Login() {\n  _s();\n\n  const [username, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleSubmit = async () => {\n    var user = {\n      user: username,\n      password: password\n    };\n    let result = await fetch(\"http://localhost:8090/api/Auth\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(user)\n    });\n    const data = await result.json();\n    let key = data.token;\n    localStorage.setItem(\"access_token\", key);\n    window.location.href = 'http://localhost:3000/employee';\n  };\n\n  function validateForm() {\n    return username.length > 0 && password.length > 0;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Login\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        width: '25rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"username\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            autoFocus: true,\n            type: \"text\",\n            value: username,\n            onChange: e => setUserName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"password\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          size: \"lg\",\n          className: \"mt-3\",\n          type: \"submit\",\n          disabled: !validateForm(),\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"meijDkpw0epgCg7aYKkurw3Erpg=\");\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/tesfa/Desktop/ReactUI/my-app/src/components/Login/Login.tsx"],"names":["React","useState","authService","Button","Card","Form","loginUser","user","console","log","login","Login","username","setUserName","password","setPassword","handleSubmit","result","fetch","method","headers","body","JSON","stringify","data","json","key","token","localStorage","setItem","window","location","href","validateForm","length","width","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Login.css';\r\nimport User from './User';\r\nimport authService from '../services/authService';\r\nimport { Button, Card, Form } from 'react-bootstrap';\r\n\r\nasync function loginUser(user: User) {\r\n  console.log('inside login')\r\n  return authService.login(user);\r\n}\r\n\r\nexport default function Login() {\r\n  const [username, setUserName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handleSubmit = async () => {\r\n    var user = {\r\n      user: username,\r\n      password: password\r\n    };\r\n   \r\n    let result = await fetch(\"http://localhost:8090/api/Auth\", {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(user)\r\n    });\r\n\r\n    const data = await result.json();\r\n    let key=data.token;\r\n    localStorage.setItem(\"access_token\",key);\r\n    window.location.href='http://localhost:3000/employee';\r\n    \r\n  }\r\n  function validateForm() {\r\n    return username.length > 0 && password.length > 0;\r\n  }\r\n  return (\r\n    <div className=\"Login\">\r\n      <Card style={{ width: '25rem' }}>\r\n      <Card.Header>Sign In</Card.Header>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Group  controlId=\"username\">\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            autoFocus\r\n            type=\"text\"\r\n            value={username}\r\n            onChange={(e) => setUserName(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"password\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Button  size=\"lg\" className='mt-3' type=\"submit\" disabled={!validateForm()}>\r\n          Login\r\n        </Button>\r\n      </Form>\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}