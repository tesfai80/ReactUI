{"ast":null,"code":"import axios from \"axios\";\nconst API_URL = \"http://localhost:8090/api/auth/\";\nconst headers = new Headers().set('Content-Type', 'application/json');\n\nclass AuthService {\n  login(user) {\n    console.log(user);\n    return axios.post(API_URL, {\n      user,\n      headers\n    }).then(response => {\n      if (response.data.accessToken) {\n        localStorage.setItem(\"accessToken\", JSON.stringify(response.data));\n      }\n\n      return response.data;\n    });\n  }\n\n  logout() {\n    localStorage.removeItem(\"access_token\");\n  }\n\n}\n\nexport default new AuthService();","map":{"version":3,"sources":["C:/Users/tesfa/Desktop/ReactUI/my-app/src/components/services/authService.tsx"],"names":["axios","API_URL","headers","Headers","set","AuthService","login","user","console","log","post","then","response","data","accessToken","localStorage","setItem","JSON","stringify","logout","removeItem"],"mappings":"AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAG,iCAAhB;AACA,MAAMC,OAAO,GAAC,IAAIC,OAAJ,GAAcC,GAAd,CAAkB,cAAlB,EAAkC,kBAAlC,CAAd;;AAEA,MAAMC,WAAN,CAAkB;AAChBC,EAAAA,KAAK,CAACC,IAAD,EAAa;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,WAAOP,KAAK,CACTU,IADI,CACCT,OADD,EACU;AACbM,MAAAA,IADa;AAEbL,MAAAA;AAFa,KADV,EAKJS,IALI,CAKCC,QAAQ,IAAI;AAChB,UAAIA,QAAQ,CAACC,IAAT,CAAcC,WAAlB,EAA+B;AAC7BC,QAAAA,YAAY,CAACC,OAAb,CAAqB,aAArB,EAAoCC,IAAI,CAACC,SAAL,CAAeN,QAAQ,CAACC,IAAxB,CAApC;AACD;;AAED,aAAOD,QAAQ,CAACC,IAAhB;AACD,KAXI,CAAP;AAYD;;AAEDM,EAAAA,MAAM,GAAG;AACPJ,IAAAA,YAAY,CAACK,UAAb,CAAwB,cAAxB;AACD;;AAnBe;;AAqBlB,eAAe,IAAIf,WAAJ,EAAf","sourcesContent":["\r\nimport axios from \"axios\";\r\nimport User from '../Login/User';\r\nconst API_URL = \"http://localhost:8090/api/auth/\";\r\nconst headers=new Headers().set('Content-Type', 'application/json');\r\n\r\nclass AuthService {\r\n  login(user: User) {\r\n    console.log(user)\r\n    return axios\r\n      .post(API_URL, {\r\n        user,\r\n        headers\r\n      })\r\n      .then(response => {\r\n        if (response.data.accessToken) {\r\n          localStorage.setItem(\"accessToken\", JSON.stringify(response.data));\r\n        }\r\n\r\n        return response.data;\r\n      });\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem(\"access_token\");\r\n  }\r\n}\r\nexport default new AuthService();"]},"metadata":{},"sourceType":"module"}