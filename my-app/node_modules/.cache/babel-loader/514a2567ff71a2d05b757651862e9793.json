{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tesfa\\\\Desktop\\\\ReactUI\\\\my-app\\\\src\\\\components\\\\Employee\\\\Employee.tsx\";\nimport * as React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Employee extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: null,\n      isLoading: false,\n      employees: null\n    };\n  }\n\n  componentDidMount() {\n    //     this.setState({ isLoading: true });\n    //     EmployeeService.getEmployeeList().\n    //     then(response => response.json())\n    //    .then(data => this.setState({ employees: data }));\n    const token = localStorage.getItem('access_token');\n    this.setState({\n      isLoading: true\n    });\n    fetch(\"http://localhost:8090/api/Employee/GetEmployees\", {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token === null || token === void 0 ? void 0 : token.replace(/[\"]+/g, '')}`,\n        'Accept': 'application/json'\n      },\n      redirect: 'follow'\n    }).then(response => response.json()).then(data => this.setState({\n      employees: data,\n      isLoading: false\n    })).catch(error => console.log('Authorization failed : ' + error.message));\n  }\n\n  render() {\n    const {\n      employees,\n      isLoading\n    } = this.state;\n\n    if (isLoading) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading ...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 20\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/tesfa/Desktop/ReactUI/my-app/src/components/Employee/Employee.tsx"],"names":["React","Employee","Component","constructor","props","state","data","isLoading","employees","componentDidMount","token","localStorage","getItem","setState","fetch","method","headers","replace","redirect","then","response","json","catch","error","console","log","message","render"],"mappings":";AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;AAGA,eAAe,MAAMC,QAAN,SAAuBD,KAAK,CAACE,SAA7B,CAAiD;AAC5DC,EAAAA,WAAW,CAACC,KAAD,EAAa;AACpB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,IADG;AAETC,MAAAA,SAAS,EAAE,KAFF;AAGTC,MAAAA,SAAS,EAAE;AAHF,KAAb;AAKH;;AACDC,EAAAA,iBAAiB,GAAG;AAEhB;AACA;AACA;AACA;AACA,UAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAd;AACA,SAAKC,QAAL,CAAc;AAAEN,MAAAA,SAAS,EAAE;AAAb,KAAd;AAEAO,IAAAA,KAAK,CAAC,iDAAD,EAAoD;AACrDC,MAAAA,MAAM,EAAE,KAD6C;AAErDC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,yBAAkB,UAASN,KAAV,aAAUA,KAAV,uBAAUA,KAAK,CAAEO,OAAP,CAAe,OAAf,EAAwB,EAAxB,CAA4B,EAFlD;AAGL,kBAAU;AAHL,OAF4C;AAOrDC,MAAAA,QAAQ,EAAE;AAP2C,KAApD,CAAL,CASKC,IATL,CASUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EATtB,EAUKF,IAVL,CAUUb,IAAI,IAAI,KAAKO,QAAL,CAAc;AAAEL,MAAAA,SAAS,EAAEF,IAAb;AAAmBC,MAAAA,SAAS,EAAE;AAA9B,KAAd,CAVlB,EAWKe,KAXL,CAWWC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAY,4BAA4BF,KAAK,CAACG,OAA9C,CAXpB;AAcH;;AACDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEnB,MAAAA,SAAF;AAAaD,MAAAA;AAAb,QAA2B,KAAKF,KAAtC;;AACA,QAAIE,SAAJ,EAAe;AACX,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;;AACD,wBACI;AAAA;AAAA;AAAA;AAAA,YADJ;AAaH;;AApD2D","sourcesContent":["import axios from 'axios';\r\nimport * as React from 'react'\r\n\r\nimport EmployeeService from '../services/EmployeeService';\r\nexport default class Employee extends React.Component<any, any> {\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            data: null,\r\n            isLoading: false,\r\n            employees: null,\r\n        };\r\n    };\r\n    componentDidMount() {\r\n\r\n        //     this.setState({ isLoading: true });\r\n        //     EmployeeService.getEmployeeList().\r\n        //     then(response => response.json())\r\n        //    .then(data => this.setState({ employees: data }));\r\n        const token = localStorage.getItem('access_token');\r\n        this.setState({ isLoading: true });\r\n\r\n        fetch(\"http://localhost:8090/api/Employee/GetEmployees\", {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token?.replace(/[\"]+/g, '')}`,\r\n                'Accept': 'application/json',\r\n            },\r\n            redirect: 'follow'\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => this.setState({ employees: data, isLoading: false }))\r\n            .catch(error => console.log('Authorization failed : ' + error.message));\r\n\r\n       \r\n    }\r\n    render() {\r\n        const { employees, isLoading } = this.state;\r\n        if (isLoading) {\r\n            return <p>Loading ...</p>;\r\n        }\r\n        return (\r\n            <div>\r\n               \r\n                {/* <ul>\r\n                     {employees.map((emp: { employeeId: React.Key | null | undefined; compantName: string | undefined; month: boolean | React.ReactChild | React.ReactFragment | React.ReactPortal | null | undefined; }) =>\r\n                        <li key={emp.employeeId}>\r\n                            <a href={emp.compantName}>\r\n                                    {emp.month}</a>\r\n                        </li>\r\n                    )} \r\n                </ul> */}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}