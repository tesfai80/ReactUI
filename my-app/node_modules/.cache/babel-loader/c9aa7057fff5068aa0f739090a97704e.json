{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tesfa\\\\Desktop\\\\ReactUI\\\\my-app\\\\src\\\\components\\\\Employee\\\\Employee.tsx\";\nimport * as React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Employee extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: null,\n      isLoading: false\n    };\n  }\n\n  componentDidMount() {\n    //     this.setState({ isLoading: true });\n    //     EmployeeService.getEmployeeList().\n    //     then(response => response.json())\n    //    .then(data => this.setState({ employees: data }));\n    const token = localStorage.getItem('access_token'); // let result =  fetch(\"http://localhost:8090/api/Employee/GetEmployees\", {\n    //   method: 'GET',\n    //   headers: {\n    //     'Content-Type': 'application/json',\n    //     'Authorization': `Bearer ${token}`\n    //   },\n    //   redirect:'follow'\n    // })\n    // .then(response => response.json())\n    // .then(json => console.log(json))\n    // .catch(error => console.log('Authorization failed : ' + error.message));\n\n    fetch(\"http://localhost:8090/api/Employee/GetEmployees\", {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      }\n    }).then(response => response.text()).then(result => console.log(result)).catch(error => console.log('error', error));\n  }\n\n  render() {\n    const {\n      employees,\n      isLoading\n    } = this.state;\n\n    if (isLoading) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading ...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 20\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/tesfa/Desktop/ReactUI/my-app/src/components/Employee/Employee.tsx"],"names":["React","Employee","Component","constructor","props","state","data","isLoading","componentDidMount","token","localStorage","getItem","fetch","headers","then","response","text","result","console","log","catch","error","render","employees"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;AAGA,eAAe,MAAMC,QAAN,SAAuBD,KAAK,CAACE,SAA7B,CAAiD;AAC5DC,EAAAA,WAAW,CAACC,KAAD,EAAa;AACpB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,IADG;AAETC,MAAAA,SAAS,EAAE;AAFF,KAAb;AAIH;;AACDC,EAAAA,iBAAiB,GAAG;AAEpB;AACA;AACA;AACA;AACA,UAAMC,KAAK,GAACC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAZ,CANoB,CAQpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGJC,IAAAA,KAAK,CAAC,iDAAD,EAAoD;AACrDC,MAAAA,OAAO,EAAC;AACJ,wBAAgB,kBADZ;AAEC,yBAAkB,UAASJ,KAAM;AAFlC;AAD6C,KAApD,CAAL,CAMGK,IANH,CAMQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EANpB,EAOGF,IAPH,CAOQG,MAAM,IAAIC,OAAO,CAACC,GAAR,CAAYF,MAAZ,CAPlB,EAQGG,KARH,CAQSC,KAAK,IAAIH,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBE,KAArB,CARlB;AAWK;;AACDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,SAAF;AAAahB,MAAAA;AAAb,QAA2B,KAAKF,KAAtC;;AACA,QAAIE,SAAJ,EAAe;AACX,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;;AACD,wBACI;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAWH;;AA1D2D","sourcesContent":["import * as React from 'react'\r\n\r\nimport EmployeeService from '../services/EmployeeService';\r\nexport default class Employee extends React.Component<any, any> {\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            data: null,\r\n            isLoading: false,\r\n        };\r\n    };\r\n    componentDidMount() {\r\n      \r\n    //     this.setState({ isLoading: true });\r\n    //     EmployeeService.getEmployeeList().\r\n    //     then(response => response.json())\r\n    //    .then(data => this.setState({ employees: data }));\r\n    const token=localStorage.getItem('access_token');\r\n   \r\n    // let result =  fetch(\"http://localhost:8090/api/Employee/GetEmployees\", {\r\n    //   method: 'GET',\r\n    //   headers: {\r\n    //     'Content-Type': 'application/json',\r\n    //     'Authorization': `Bearer ${token}`\r\n    //   },\r\n    //   redirect:'follow'\r\n    // })\r\n    // .then(response => response.json())\r\n    // .then(json => console.log(json))\r\n    // .catch(error => console.log('Authorization failed : ' + error.message));\r\n   \r\n\r\nfetch(\"http://localhost:8090/api/Employee/GetEmployees\", {\r\n    headers:{\r\n        'Content-Type': 'application/json',\r\n             'Authorization': `Bearer ${token}`\r\n    },\r\n})\r\n  .then(response => response.text())\r\n  .then(result => console.log(result))\r\n  .catch(error => console.log('error', error));\r\n\r\n\r\n    }\r\n    render() {\r\n        const { employees, isLoading } = this.state;\r\n        if (isLoading) {\r\n            return <p>Loading ...</p>;\r\n        }\r\n        return (\r\n            <div>\r\n                <ul>\r\n                    {/* {employees.map(hit:any =>\r\n                        <li key={hit.objectID}>\r\n                            <a href={hit.url}>{hit.title}</a>\r\n                        </li>\r\n                    )} */}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}