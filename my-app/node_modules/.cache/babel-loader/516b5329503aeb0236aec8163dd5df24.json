{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tesfa\\\\Desktop\\\\ReactUI\\\\my-app\\\\src\\\\components\\\\Employee\\\\Employee.tsx\";\nimport * as React from 'react';\nimport EmployeeService from '../services/EmployeeService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Employee extends React.Component {\n  constructor(props) {\n    super(props);\n    this.url = \"http://localhost:8090/api/Employee/GetEmployees\";\n\n    this.handleUpdate = event => {\n      event.preventDefault();\n      alert('id');\n    };\n\n    this.handleDelete = id => {\n      alert(id);\n    };\n\n    this.refreshData = () => {\n      let emp = EmployeeService.getEmployeeList();\n      console.log(emp);\n    };\n\n    this.state = {\n      isLoading: false,\n      employees: []\n    };\n  }\n\n  componentDidMount() {\n    const token = localStorage.getItem('access_token');\n    this.setState({\n      isLoading: true\n    }); // axios.get(this.url, {\n    //     headers: {\n    //         'Content-Type': 'application/json',\n    //         'Authorization': `Bearer ${token}`,\n    //     }\n    // })\n    //     .then(res => {\n    //         const employees = res.data;\n    //         console.log(employees);\n    //         this.setState({ employees, isLoading: false });\n    //     })\n    //     .catch(error => console.log(error.message));\n\n    this.refreshData();\n  }\n\n  render() {\n    const {\n      employees,\n      isLoading\n    } = this.state;\n\n    if (isLoading) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading ...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 20\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-bordered\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          className: \"text-lg-center\",\n          children: /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Employess\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: this.state.employees.map(emp => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: emp.employeeId\n            }, emp.employeeId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: emp.employeeName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: emp.companyName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: emp.month\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"button\",\n                className: \"btn-primary\",\n                value: \"Update\",\n                onClick: this.handleUpdate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/tesfa/Desktop/ReactUI/my-app/src/components/Employee/Employee.tsx"],"names":["React","EmployeeService","Employee","Component","constructor","props","url","handleUpdate","event","preventDefault","alert","handleDelete","id","refreshData","emp","getEmployeeList","console","log","state","isLoading","employees","componentDidMount","token","localStorage","getItem","setState","render","map","employeeId","employeeName","companyName","month"],"mappings":";AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAIA,OAAOC,eAAP,MAA4B,6BAA5B;;AACA,eAAe,MAAMC,QAAN,SAAuBF,KAAK,CAACG,SAA7B,CAAiD;AAE5DC,EAAAA,WAAW,CAACC,KAAD,EAAa;AACpB,UAAMA,KAAN;AADoB,SADfC,GACe,GADT,iDACS;;AAAA,SAyBxBC,YAzBwB,GAyBTC,KAAK,IAAI;AACpBA,MAAAA,KAAK,CAACC,cAAN;AACAC,MAAAA,KAAK,CAAC,IAAD,CAAL;AACH,KA5BuB;;AAAA,SA6BxBC,YA7BwB,GA6BRC,EAAD,IAAa;AACxBF,MAAAA,KAAK,CAACE,EAAD,CAAL;AACH,KA/BuB;;AAAA,SAgCxBC,WAhCwB,GAgCV,MAAM;AAEnB,UAAIC,GAAG,GAAEb,eAAe,CAACc,eAAhB,EAAT;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AAIA,KAvCuB;;AAEpB,SAAKI,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE,KADF;AAETC,MAAAA,SAAS,EAAE;AAFF,KAAb;AAIH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,UAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAd;AACA,SAAKC,QAAL,CAAc;AAAEN,MAAAA,SAAS,EAAE;AAAb,KAAd,EAFgB,CAGhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAAKN,WAAL;AACH;;AAgBDa,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEN,MAAAA,SAAF;AAAaD,MAAAA;AAAb,QAA2B,KAAKD,KAAtC;;AACA,QAAIC,SAAJ,EAAe;AACX,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;;AACD,wBACI;AAAA,6BACI;AAAO,QAAA,SAAS,EAAC,sBAAjB;AAAA,gCACI;AAAO,UAAA,SAAS,EAAC,gBAAjB;AAAA,iCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAA,oBAEQ,KAAKD,KAAL,CAAWE,SAAX,CAAqBO,GAArB,CAAyBb,GAAG,iBACxB;AAAA,oCACI;AAAA,wBAA0BA,GAAG,CAACc;AAA9B,eAASd,GAAG,CAACc,UAAb;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA,wBAAKd,GAAG,CAACe;AAAT;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAA,wBAAKf,GAAG,CAACgB;AAAT;AAAA;AAAA;AAAA;AAAA,oBAHJ,eAII;AAAA,wBAAKhB,GAAG,CAACiB;AAAT;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAKI;AAAA,qCACI;AAAO,gBAAA,IAAI,EAAC,QAAZ;AAAqB,gBAAA,SAAS,EAAC,aAA/B;AAA6C,gBAAA,KAAK,EAAC,QAAnD;AAA4D,gBAAA,OAAO,EAAE,KAAKxB;AAA1E;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ;AAFR;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAyBH;;AAxE2D","sourcesContent":["import axios from 'axios';\r\nimport * as React from 'react'\r\nimport authService from '../services/authService';\r\n\r\n\r\nimport EmployeeService from '../services/EmployeeService';\r\nexport default class Employee extends React.Component<any, any> {\r\n    readonly url = \"http://localhost:8090/api/Employee/GetEmployees\";\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: false,\r\n            employees: [],\r\n        };\r\n    };\r\n\r\n    componentDidMount() {\r\n        const token = localStorage.getItem('access_token');\r\n        this.setState({ isLoading: true });\r\n        // axios.get(this.url, {\r\n        //     headers: {\r\n        //         'Content-Type': 'application/json',\r\n        //         'Authorization': `Bearer ${token}`,\r\n        //     }\r\n        // })\r\n        //     .then(res => {\r\n        //         const employees = res.data;\r\n        //         console.log(employees);\r\n        //         this.setState({ employees, isLoading: false });\r\n        //     })\r\n        //     .catch(error => console.log(error.message));\r\n        this.refreshData();\r\n    }\r\n    handleUpdate = event => {\r\n        event.preventDefault();\r\n        alert('id')\r\n    };\r\n    handleDelete = (id: any) => {\r\n        alert(id);\r\n    };\r\n    refreshData = () => {\r\n     \r\n     let emp= EmployeeService.getEmployeeList()\r\n     console.log(emp);\r\n     \r\n    \r\n          \r\n    };\r\n    render() {\r\n        const { employees, isLoading } = this.state;\r\n        if (isLoading) {\r\n            return <p>Loading ...</p>;\r\n        }\r\n        return (\r\n            <div>\r\n                <table className='table table-bordered'>\r\n                    <thead className='text-lg-center'>\r\n                        <th>Employess</th>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.employees.map(emp =>\r\n                                <tr>\r\n                                    <td key={emp.employeeId}>{emp.employeeId}</td>\r\n                                    <td>{emp.employeeName}</td>\r\n                                    <td>{emp.companyName}</td>\r\n                                    <td>{emp.month}</td>\r\n                                    <td>\r\n                                        <input type='button' className='btn-primary' value='Update' onClick={this.handleUpdate} />\r\n                                        {/* <input type='button' className='btn-danger' value='Delete' onClick={this.handleDelete(emp.employeeId)} /> */}\r\n                                    </td>\r\n                                </tr>\r\n                            )\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}