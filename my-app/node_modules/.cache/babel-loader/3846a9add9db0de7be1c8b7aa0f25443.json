{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tesfa\\\\Desktop\\\\ReactUI\\\\my-app\\\\src\\\\components\\\\Employee\\\\Employee.tsx\";\nimport axios from 'axios';\nimport * as React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Employee extends React.Component {\n  constructor(props) {\n    super(props);\n    this.url = \"http://localhost:8090/api/Employee/GetEmployees\";\n    this.state = {\n      data: null,\n      isLoading: false,\n      employees: []\n    };\n  }\n\n  componentDidMount() {\n    //     this.setState({ isLoading: true });\n    //     EmployeeService.getEmployeeList().\n    //     then(response => response.json())\n    //    .then(data => this.setState({ employees: data }));\n    const token = localStorage.getItem('access_token');\n    this.setState({\n      isLoading: true\n    }); // fetch(\"http://localhost:8090/api/Employee/GetEmployees\", {\n    //     method: 'GET',\n    //     headers: {\n    //         'Content-Type': 'application/json',\n    //         'Authorization': `Bearer ${token?.replace(/[\"]+/g, '')}`,\n    //     },\n    //     redirect: 'follow'\n    // })\n    //     .then(response => response.json())\n    //     .then(data => this.setState({ employees: data, isLoading: false }))\n    //     .catch(error => console.log('Authorization failed : ' + error.message));\n\n    axios.get('https://jsonplaceholder.typicode.com/users', {}).then(res => res.data()).then(json => console.log(json));\n  }\n\n  render() {\n    const {\n      employees,\n      isLoading\n    } = this.state;\n\n    if (isLoading) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading ...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 20\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/tesfa/Desktop/ReactUI/my-app/src/components/Employee/Employee.tsx"],"names":["axios","React","Employee","Component","constructor","props","url","state","data","isLoading","employees","componentDidMount","token","localStorage","getItem","setState","get","then","res","json","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;;AAGA,eAAe,MAAMC,QAAN,SAAuBD,KAAK,CAACE,SAA7B,CAAiD;AAE5DC,EAAAA,WAAW,CAACC,KAAD,EAAa;AACpB,UAAMA,KAAN;AADoB,SADfC,GACe,GADX,iDACW;AAGpB,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,IADG;AAETC,MAAAA,SAAS,EAAE,KAFF;AAGTC,MAAAA,SAAS,EAAE;AAHF,KAAb;AAKH;;AACDC,EAAAA,iBAAiB,GAAG;AAEhB;AACA;AACA;AACA;AACA,UAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAd;AACA,SAAKC,QAAL,CAAc;AAAEN,MAAAA,SAAS,EAAE;AAAb,KAAd,EAPgB,CAShB;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AACRT,IAAAA,KAAK,CAACgB,GAAN,CAAU,4CAAV,EAAuD,EAAvD,EACGC,IADH,CACQC,GAAG,IAAEA,GAAG,CAACV,IAAJ,EADb,EAECS,IAFD,CAEME,IAAI,IAAEC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAFZ;AAIK;;AACDG,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEZ,MAAAA,SAAF;AAAaD,MAAAA;AAAb,QAA2B,KAAKF,KAAtC;;AACA,QAAIE,SAAJ,EAAe;AACX,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;;AACD,wBACI;AAAA;AAAA;AAAA;AAAA,YADJ;AAaH;;AAvD2D","sourcesContent":["import axios from 'axios';\r\nimport * as React from 'react'\r\n\r\nimport EmployeeService from '../services/EmployeeService';\r\nexport default class Employee extends React.Component<any, any> {\r\n    readonly url=\"http://localhost:8090/api/Employee/GetEmployees\";\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            data: null,\r\n            isLoading: false,\r\n            employees: [],\r\n        };\r\n    };\r\n    componentDidMount() {\r\n\r\n        //     this.setState({ isLoading: true });\r\n        //     EmployeeService.getEmployeeList().\r\n        //     then(response => response.json())\r\n        //    .then(data => this.setState({ employees: data }));\r\n        const token = localStorage.getItem('access_token');\r\n        this.setState({ isLoading: true });\r\n\r\n        // fetch(\"http://localhost:8090/api/Employee/GetEmployees\", {\r\n        //     method: 'GET',\r\n        //     headers: {\r\n        //         'Content-Type': 'application/json',\r\n        //         'Authorization': `Bearer ${token?.replace(/[\"]+/g, '')}`,\r\n                \r\n        //     },\r\n        //     redirect: 'follow'\r\n        // })\r\n        //     .then(response => response.json())\r\n        //     .then(data => this.setState({ employees: data, isLoading: false }))\r\n        //     .catch(error => console.log('Authorization failed : ' + error.message));\r\naxios.get('https://jsonplaceholder.typicode.com/users',{\r\n}).then(res=>res.data())\r\n.then(json=>console.log(json));\r\n       \r\n    }\r\n    render() {\r\n        const { employees, isLoading } = this.state;\r\n        if (isLoading) {\r\n            return <p>Loading ...</p>;\r\n        }\r\n        return (\r\n            <div>\r\n               \r\n                {/* <ul>\r\n                     {employees.map((emp: { employeeId: React.Key | null | undefined; compantName: string | undefined; month: boolean | React.ReactChild | React.ReactFragment | React.ReactPortal | null | undefined; }) =>\r\n                        <li key={emp.employeeId}>\r\n                            <a href={emp.compantName}>\r\n                                    {emp.month}</a>\r\n                        </li>\r\n                    )} \r\n                </ul> */}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}