{"ast":null,"code":"class EmployeeService {\n  constructor() {\n    this.APIUrl = 'http://localhost:8090/api/Employee';\n    this.auth_token = localStorage.getItem(\"access_token\");\n    this.header = {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${this.auth_token}`\n    };\n  }\n\n  async getEmployeeList() {\n    return await fetch(this.APIUrl + '/GetEmployees', {\n      method: 'GET',\n      headers: this.header\n    }).then(d => d.json()).catch(error => console.log(error)); //  console.log(result.json());\n    //return result = await result.json(); \n  }\n\n  async create(emp) {\n    let result = await fetch(this.APIUrl + '/AddEmployee', {\n      method: 'POST',\n      headers: this.header,\n      body: JSON.stringify(emp)\n    });\n    return result = await result.json();\n  }\n\n  async update(emp) {\n    let result = await fetch(this.APIUrl + '/UpdateEmployee', {\n      method: 'PUT',\n      headers: this.header,\n      body: JSON.stringify(emp)\n    });\n    return result = await result.json();\n  }\n\n  async delete(id) {\n    let result = await fetch(this.APIUrl + '/UpdateEmployee', {\n      method: 'DELETE',\n      headers: this.header,\n      body: JSON.stringify(id)\n    });\n    return result = await result.json();\n  }\n\n}\n\nexport default new EmployeeService();","map":{"version":3,"sources":["C:/Users/tesfa/Desktop/ReactUI/my-app/src/components/services/EmployeeService.tsx"],"names":["EmployeeService","APIUrl","auth_token","localStorage","getItem","header","getEmployeeList","fetch","method","headers","then","d","json","catch","error","console","log","create","emp","result","body","JSON","stringify","update","delete","id"],"mappings":"AAIA,MAAMA,eAAN,CAAqB;AAAA;AAAA,SAERC,MAFQ,GAED,oCAFC;AAAA,SAGRC,UAHQ,GAGGC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAHH;AAAA,SAIRC,MAJQ,GAID;AAChB,sBAAgB,kBADA;AAEhB,uBAAkB,UAAS,KAAKH,UAAW;AAF3B,KAJC;AAAA;;AAQI,QAAfI,eAAe,GAAE;AACvB,WAAO,MAAMC,KAAK,CAAC,KAAKN,MAAL,GAAc,eAAf,EAAgC;AAChDO,MAAAA,MAAM,EAAE,KADwC;AAEhDC,MAAAA,OAAO,EAAC,KAAKJ;AAFmC,KAAhC,CAAL,CAIZK,IAJY,CAIPC,CAAC,IAAEA,CAAC,CAACC,IAAF,EAJI,EAKZC,KALY,CAKNC,KAAK,IAAEC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CALD,CAAb,CADuB,CAOzB;AACC;AAEC;;AAEW,QAANG,MAAM,CAACC,GAAD,EAAoB;AAC3B,QAAIC,MAAM,GAAG,MAAMZ,KAAK,CAAC,KAAKN,MAAL,GAAc,cAAf,EAA+B;AACnDO,MAAAA,MAAM,EAAE,MAD2C;AAEnDC,MAAAA,OAAO,EAAC,KAAKJ,MAFsC;AAGnDe,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,GAAf;AAH6C,KAA/B,CAAxB;AAKC,WAAOC,MAAM,GAAG,MAAMA,MAAM,CAACP,IAAP,EAAtB;AACJ;;AACW,QAANW,MAAM,CAACL,GAAD,EAAmB;AAC3B,QAAIC,MAAM,GAAG,MAAMZ,KAAK,CAAC,KAAKN,MAAL,GAAc,iBAAf,EAAkC;AACtDO,MAAAA,MAAM,EAAE,KAD8C;AAEtDC,MAAAA,OAAO,EAAE,KAAKJ,MAFwC;AAGtDe,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,GAAf;AAHgD,KAAlC,CAAxB;AAKC,WAAOC,MAAM,GAAG,MAAMA,MAAM,CAACP,IAAP,EAAtB;AACJ;;AACU,QAANY,MAAM,CAACC,EAAD,EAAQ;AACf,QAAIN,MAAM,GAAG,MAAMZ,KAAK,CAAC,KAAKN,MAAL,GAAc,iBAAf,EAAkC;AACtDO,MAAAA,MAAM,EAAE,QAD8C;AAEtDC,MAAAA,OAAO,EAAE,KAAKJ,MAFwC;AAGtDe,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeG,EAAf;AAHgD,KAAlC,CAAxB;AAKC,WAAON,MAAM,GAAG,MAAMA,MAAM,CAACP,IAAP,EAAtB;AAEJ;;AA5CgB;;AA+CrB,eAAe,IAAIZ,eAAJ,EAAf","sourcesContent":["import EmployeeModel from \"../Employee/EmployeeModel\";\r\n\r\n\r\n\r\nclass EmployeeService{\r\n\r\n    readonly APIUrl='http://localhost:8090/api/Employee';\r\n    readonly auth_token=localStorage.getItem(\"access_token\");\r\n    readonly header={\r\n    'Content-Type': 'application/json',\r\n    'Authorization': `Bearer ${this.auth_token}`\r\n   }\r\n   async  getEmployeeList(){ \r\n    return await fetch(this.APIUrl + '/GetEmployees', {\r\n      method: 'GET',\r\n      headers:this.header,\r\n    })\r\n    .then(d=>d.json())\r\n    .catch(error=>console.log(error))\r\n  //  console.log(result.json());\r\n   //return result = await result.json(); \r\n   \r\n   }\r\n\r\n   async create(emp: EmployeeModel){\r\n        let result = await fetch(this.APIUrl + '/AddEmployee', {\r\n            method: 'POST',\r\n            headers:this.header,\r\n            body: JSON.stringify(emp)\r\n          });\r\n         return result = await result.json(); \r\n    }\r\n    async update(emp:EmployeeModel){\r\n        let result = await fetch(this.APIUrl + '/UpdateEmployee', {\r\n            method: 'PUT',\r\n            headers: this.header,\r\n            body: JSON.stringify(emp)\r\n          });\r\n         return result = await result.json(); \r\n    }\r\n   async delete(id:any){\r\n        let result = await fetch(this.APIUrl + '/UpdateEmployee', {\r\n            method: 'DELETE',\r\n            headers: this.header,\r\n            body: JSON.stringify(id)\r\n          });\r\n         return result = await result.json(); \r\n\r\n    }\r\n} \r\n\r\nexport default new EmployeeService()"]},"metadata":{},"sourceType":"module"}