[{"C:\\Users\\tesfa\\Desktop\\ReactUI\\my-app\\src\\index.tsx":"1","C:\\Users\\tesfa\\Desktop\\ReactUI\\my-app\\src\\reportWebVitals.ts":"2","C:\\Users\\tesfa\\Desktop\\ReactUI\\my-app\\src\\App.tsx":"3","C:\\Users\\tesfa\\Desktop\\ReactUI\\my-app\\src\\components\\Login\\Login.tsx":"4","C:\\Users\\tesfa\\Desktop\\ReactUI\\my-app\\src\\components\\services\\authService.tsx":"5","C:\\Users\\tesfa\\Desktop\\ReactUI\\my-app\\src\\components\\Employee\\Employee.tsx":"6","C:\\Users\\tesfa\\Desktop\\ReactUI\\my-app\\src\\components\\Home\\Home.jsx":"7","C:\\Users\\tesfa\\Desktop\\ReactUI\\my-app\\src\\components\\Navigation\\Navbar.tsx":"8","C:\\Users\\tesfa\\Desktop\\ReactUI\\my-app\\src\\components\\Navigation\\NavbarElements.js":"9","C:\\Users\\tesfa\\Desktop\\ReactUI\\my-app\\src\\components\\services\\EmployeeService.tsx":"10","C:\\Users\\tesfa\\Desktop\\ReactUI\\my-app\\src\\components\\Employee\\CreateEmployee.tsx":"11","C:\\Users\\tesfa\\Desktop\\ReactUI\\my-app\\src\\components\\Employee\\Example.tsx":"12","C:\\Users\\tesfa\\Desktop\\ReactUI\\my-app\\src\\components\\Employee\\EmpModal.tsx":"13","C:\\Users\\tesfa\\Desktop\\ReactUI\\my-app\\src\\components\\Employee\\Update.tsx":"14"},{"size":547,"mtime":1639923805149,"results":"15","hashOfConfig":"16"},{"size":425,"mtime":499162500000,"results":"17","hashOfConfig":"16"},{"size":977,"mtime":1640191760747,"results":"18","hashOfConfig":"16"},{"size":2001,"mtime":1640188113577,"results":"19","hashOfConfig":"16"},{"size":703,"mtime":1640008033310,"results":"20","hashOfConfig":"16"},{"size":2771,"mtime":1640190948444,"results":"21","hashOfConfig":"16"},{"size":287,"mtime":1640361600242,"results":"22","hashOfConfig":"16"},{"size":607,"mtime":1640191681542,"results":"23","hashOfConfig":"16"},{"size":1691,"mtime":1639842220598,"results":"24","hashOfConfig":"16"},{"size":1499,"mtime":1640192276720,"results":"25","hashOfConfig":"16"},{"size":1872,"mtime":1640362184552,"results":"26","hashOfConfig":"16"},{"size":1135,"mtime":1640185214221,"results":"27","hashOfConfig":"16"},{"size":161,"mtime":1640186770872,"results":"28","hashOfConfig":"16"},{"size":2832,"mtime":1640361904800,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1oouvxs",{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\tesfa\\Desktop\\ReactUI\\my-app\\src\\index.tsx",[],["65","66"],"C:\\Users\\tesfa\\Desktop\\ReactUI\\my-app\\src\\reportWebVitals.ts",[],"C:\\Users\\tesfa\\Desktop\\ReactUI\\my-app\\src\\App.tsx",["67"],"import React from 'react';\nimport './App.css';\nimport Employee from './components/Employee/Employee';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Login from './components/Login/Login';\nimport Navbar from './components/Navigation/Navbar';\nimport Home from './components/Home/Home';\nimport CreateEmployee from './components/Employee/CreateEmployee';\nimport Update from './components/Employee/Update';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Navbar />\n\n        <div >\n          <Switch>\n            <Route path=\"/home\" exact component={Home} />\n            <Route path=\"/login\" exact component={Login} />\n            <Route path=\"/employee\" exact component={Employee} />\n            <Route path=\"/new\" exact component={CreateEmployee} />\n            <Route path=\"/update\" exact component={Update} />\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\tesfa\\Desktop\\ReactUI\\my-app\\src\\components\\Login\\Login.tsx",["68","69"],"import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Login.css';\r\nimport User from './User';\r\nimport authService from '../services/authService';\r\nimport { Button, Card, Form } from 'react-bootstrap';\r\n\r\nasync function loginUser(user: User) {\r\n  console.log('inside login')\r\n  return authService.login(user);\r\n}\r\n\r\nexport default function Login() {\r\n  const [username, setUserName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handleSubmit = async () => {\r\n    var user = {\r\n      user: username,\r\n      password: password\r\n    };\r\n   \r\n    let result = await fetch(\"http://localhost:8090/api/Auth\", {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(user)\r\n    });\r\n\r\n    const data = await result.json();\r\n    let key=data.token;\r\n    localStorage.setItem(\"access_token\",key);\r\n    window.location.href='http://localhost:3000/employee';\r\n    \r\n  }\r\n  function validateForm() {\r\n    return username.length > 0 && password.length > 0;\r\n  }\r\n  return (\r\n    <div className=\"Login\">\r\n      <Card style={{ width: '25rem' }} className=\"text-center card\">\r\n      <Card.Header>Sign In</Card.Header>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Group  controlId=\"username\">\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            autoFocus\r\n            type=\"text\"\r\n            value={username}\r\n            onChange={(e) => setUserName(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"password\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Button  size=\"lg\" className='mt-3' type=\"submit\" disabled={!validateForm()}>\r\n          Login\r\n        </Button>\r\n      </Form>\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n","C:\\Users\\tesfa\\Desktop\\ReactUI\\my-app\\src\\components\\services\\authService.tsx",["70","71"],"\r\nimport axios from \"axios\";\r\nimport User from '../Login/User';\r\nconst API_URL = \"http://localhost:8090/api/auth\";\r\nconst head=new Headers().set('Content-Type', 'application/json');\r\n\r\nclass AuthService {\r\n  async login(user: User) {\r\n    \r\n    var data = JSON.stringify(user);\r\n  var  head: { \r\n      'Content-Type': 'application/json'\r\n    };\r\n    const response = await axios\r\n      .post(API_URL, {\r\n       data:{data}\r\n        \r\n      });\r\n    if (response.data.accessToken) {\r\n      localStorage.setItem(\"access_token\", JSON.stringify(response.data));\r\n    }\r\n\r\n    return response.data;\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem(\"access_token\");\r\n  }\r\n}\r\nexport default new AuthService();","C:\\Users\\tesfa\\Desktop\\ReactUI\\my-app\\src\\components\\Employee\\Employee.tsx",["72","73","74"],"import axios from 'axios';\r\nimport * as React from 'react'\r\nimport Example from './Example';\r\nimport Update from './Update';\r\n\r\nimport employeeService from '../services/EmployeeService';\r\nimport { Button } from 'react-bootstrap';\r\nexport default class Employee extends React.Component<any, any> {\r\n    readonly url = \"http://localhost:8090/api/Employee/GetEmployees\";\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: false,\r\n            employees: [],\r\n            id:\"\"\r\n        };\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.setState({ isLoading: true });\r\n        this.refreshData();\r\n    }\r\n    handleUpdate = (id: any) => {\r\n        alert(id);\r\n     <Update/>\r\n       \r\n    };\r\n    handleDelete = (id: any) => {\r\n       employeeService.delete(id)\r\n       .then(emp=>{\r\n        this.refreshData();\r\n        this.setState({employess:emp,isLoading:false})\r\n       })\r\n       .catch(error=>console.log(error));\r\n       \r\n    };\r\n    refreshData = () => {\r\n        employeeService.getEmployeeList()\r\n     .then(d=>{\r\n        this.setState({employees:d, isLoading: false})\r\n     })\r\n     .catch(error=>console.log(error));\r\n    \r\n    };\r\n    render() {\r\n        const { employees, isLoading } = this.state;\r\n        if (isLoading) {\r\n            return <p>Loading ...</p>;\r\n        }\r\n        return (\r\n            <div>\r\n                <table className='table table-bordered'>\r\n                    <thead className='text-lg-center'>\r\n                        <tr>\r\n                            <th>#</th>\r\n                            <th>Name</th>\r\n                            <th>Company</th>\r\n                            <th>Date</th>\r\n                            <th>Options</th>\r\n                       </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.employees.map(emp =>\r\n                                <tr>\r\n                                    <td key={emp.employeeId}>{emp.employeeId}</td>\r\n                                    <td>{emp.employeeName}</td>\r\n                                    <td>{emp.companyName}</td>\r\n                                    <td>{emp.month}</td>\r\n                                    <td>\r\n                                        <Button variant='primary'  onClick={()=>this.handleUpdate(emp.employeeId)} >Update</Button>\r\n                                        <Button variant='danger'  onClick={()=>this.handleDelete(emp.employeeId)} >Delete</Button>\r\n                                    </td>\r\n                                </tr>\r\n                            )\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}","C:\\Users\\tesfa\\Desktop\\ReactUI\\my-app\\src\\components\\Home\\Home.jsx",[],"C:\\Users\\tesfa\\Desktop\\ReactUI\\my-app\\src\\components\\Navigation\\Navbar.tsx",[],"C:\\Users\\tesfa\\Desktop\\ReactUI\\my-app\\src\\components\\Navigation\\NavbarElements.js",[],["75","76"],"C:\\Users\\tesfa\\Desktop\\ReactUI\\my-app\\src\\components\\services\\EmployeeService.tsx",["77","78"],"import axios from \"axios\";\r\nimport EmployeeModel from \"../Employee/EmployeeModel\";\r\n\r\n\r\n\r\nclass EmployeeService {\r\n\r\n  readonly APIUrl = 'http://localhost:8090/api/Employee';\r\n  readonly auth_token = localStorage.getItem(\"access_token\");\r\n  readonly header = {\r\n    'Content-Type': 'application/json',\r\n    'Authorization': `Bearer ${this.auth_token}`\r\n  }\r\n  async getEmployeeList() {\r\n\r\n    let emp = axios.get(this.APIUrl + '/GetEmployees', {\r\n      method: 'GET',\r\n      headers: this.header\r\n    });\r\n    return emp = emp.then(e => e.data);\r\n  }\r\n\r\n  async create(emp: EmployeeModel) {\r\n    let result = await fetch(this.APIUrl + '/AddEmployee', {\r\n      method: 'POST',\r\n      headers: this.header,\r\n      body: JSON.stringify(emp)\r\n    })\r\n    return result = await result.json();\r\n  }\r\n  async update(emp: EmployeeModel) {\r\n    let result = await fetch(this.APIUrl + '/UpdateEmployee', {\r\n      method: 'PUT',\r\n      headers: this.header,\r\n      body: JSON.stringify(emp)\r\n    });\r\n    return result = await result.json();\r\n  }\r\n  async delete(id: any) {\r\n    let result = await fetch(this.APIUrl + '/DeleteEmployee/' + `${id}`, {\r\n      method: 'DELETE',\r\n      headers: this.header,\r\n    });\r\n    return result = await result.json();\r\n  }\r\n  async getById(id: any) {\r\n    let result = await fetch(this.APIUrl + '/GetEmployee/' + `${id}`, {\r\n      method: 'GET',\r\n      headers: this.header,\r\n    });\r\n    return result = await result.json();\r\n  }\r\n}\r\n\r\nexport default new EmployeeService()","C:\\Users\\tesfa\\Desktop\\ReactUI\\my-app\\src\\components\\Employee\\CreateEmployee.tsx",[],"C:\\Users\\tesfa\\Desktop\\ReactUI\\my-app\\src\\components\\Employee\\Example.tsx",["79"],"C:\\Users\\tesfa\\Desktop\\ReactUI\\my-app\\src\\components\\Employee\\EmpModal.tsx",[],"C:\\Users\\tesfa\\Desktop\\ReactUI\\my-app\\src\\components\\Employee\\Update.tsx",["80","81"],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":8,"column":3,"nodeType":"88","messageId":"89","endLine":8,"endColumn":7},{"ruleId":"86","severity":1,"message":"90","line":2,"column":8,"nodeType":"88","messageId":"89","endLine":2,"endColumn":17},{"ruleId":"86","severity":1,"message":"91","line":8,"column":16,"nodeType":"88","messageId":"89","endLine":8,"endColumn":25},{"ruleId":"86","severity":1,"message":"92","line":5,"column":7,"nodeType":"88","messageId":"89","endLine":5,"endColumn":11},{"ruleId":"86","severity":1,"message":"93","line":11,"column":8,"nodeType":"88","messageId":"89","endLine":13,"endColumn":6},{"ruleId":"86","severity":1,"message":"94","line":1,"column":8,"nodeType":"88","messageId":"89","endLine":1,"endColumn":13},{"ruleId":"86","severity":1,"message":"95","line":3,"column":8,"nodeType":"88","messageId":"89","endLine":3,"endColumn":15},{"ruleId":"86","severity":1,"message":"96","line":46,"column":17,"nodeType":"88","messageId":"89","endLine":46,"endColumn":26},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"97","severity":1,"message":"98","line":40,"column":63,"nodeType":"99","messageId":"100","endLine":40,"endColumn":64},{"ruleId":"97","severity":1,"message":"98","line":47,"column":60,"nodeType":"99","messageId":"100","endLine":47,"endColumn":61},{"ruleId":"86","severity":1,"message":"101","line":3,"column":20,"nodeType":"88","messageId":"89","endLine":3,"endColumn":26},{"ruleId":"86","severity":1,"message":"102","line":2,"column":17,"nodeType":"88","messageId":"89","endLine":2,"endColumn":26},{"ruleId":"86","severity":1,"message":"101","line":4,"column":10,"nodeType":"88","messageId":"89","endLine":4,"endColumn":16},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'PropTypes' is defined but never used.","'loginUser' is defined but never used.","'head' is assigned a value but never used.","'head' is defined but never used.","'axios' is defined but never used.","'Example' is defined but never used.","'employees' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'render' is defined but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation"]